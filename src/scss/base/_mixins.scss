@use './variables' as *;
@use './functions' as *;

  // calculate adaptive property if we don't have value for tablet, but have values for desktop and mobile
  // example: @include adaptive-background-property('width', 117.43px, 175.39px);
  
  @mixin adaptive-background-property($property, $mobile-value, $desktop-value, $tablet-value: null) {
    #{$property}: $mobile-value;
  
      // Calculation of the value for tablets, if not specified
    @if $tablet-value == null {
      $tablet-value: $mobile-value + ($desktop-value - $mobile-value) * 0.5;
    }
  
      // Adaptive value for tablets and above
    @media screen and (min-width: $screen-md) {
      $mobile-value-num : strip-unit($mobile-value);
      $tablet-value-num : strip-unit($tablet-value);
      $desktop-value-num: strip-unit($desktop-value);
      $screen-md-num    : strip-unit($screen-md);
      $screen-xl-num    : strip-unit($screen-xl);
  
      #{$property}: calc(#{$tablet-value} + (#{$desktop-value-num} - #{$tablet-value-num}) * (min(100vw, #{$screen-xl}) - #{$screen-md}) / (#{$screen-xl-num} - #{$screen-md-num}));
    }
  
      // Fixed value for desktop
    @media screen and (min-width: $screen-xl) {
      #{$property}: $desktop-value;
    }
  }

  @mixin adaptive-value($property, $mobileValue, $desktopValue: null, $desktopBreakpoint: $screen-lg) {
    #{$property}: px-to-rem($mobileValue);

    @if $desktopValue != null { 
        @media (min-width: $desktopBreakpoint) {
            #{$property}: px-to-rem($desktopValue);
        }
    }
  }