@use "base/variables" as *;
@use "base/mixins-adaptive" as *;

.sub-nav {
    padding-top     : 1.688rem;
    padding-bottom  : 4.125rem;
    background-color: $color-primary;
    position        : relative;
    overflow        : hidden;


    // for the fixed nav-sm
    @include adaptive-value('margin-top', 67.77px);
    @media screen and (min-width: $screen-lg) {
        margin-top: 0;
    }
   
    &-container {
        padding-left   : 0.625rem;
        display        : flex;
        justify-content: flex-start;
        flex-direction : column;
        gap            : 2.25rem;

        @media screen and (min-width: $screen-md) {
            padding-left: 15.28%;  // corresponding to view width of section containers
        }
        @media screen and (min-width: $screen-lg) {
            padding-left: 7.5rem;
        }
    }

    &__title {
        font-weight: $font-weight-h1;
        color      : $color-text-secondary;
        @include adaptive-value('font-size', $h1-font-size-mobile, $h1-font-size-desktop);
        @include adaptive-value('line-height', $h1-line-height-mobile, $h1-line-height-desktop);
      
    }

    &__background {
        @include adaptive-background-property('width', 199.01px, 249.92px);
        @include adaptive-background-property('height', 201px, 252.42px);
        @include adaptive-background-property('top', -20px, -60px);
        @include adaptive-background-property('right', 8.49px, 86.5px);

        &--rotated {
            transform: rotate(180deg);
            @include adaptive-background-property('width', 318.32px, 399.8px);
            @include adaptive-background-property('height', 319.73px, 401.57px);
            @include adaptive-background-property('top', -14.33px, -43px);
            @include adaptive-background-property('right', -160.58px, -107.92px);
        }
    }
}

.breadcrumbs {

    &-container {
        display       : flex;
        flex-direction: row;
        margin        : 0;
        padding       : 0;
    }

    &__item {

        &:first-child {
            padding-right: 0.5rem;
            color        : $color-link-visited;
        }
    
        &:not(:first-child) {
            padding-left: 0.5rem;
            border-left : 1px solid $color-link-visited;
        }

        &:last-child {
            color: $color-text-secondary;
        }
    
    }
    
    &__link {
        text-decoration: none;
        color          : $color-link-visited;
    
    }
}

